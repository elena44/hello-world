{
  "name": "The distribution of the variations of the preposition a~ab in Caesar's 'Commentaries on the Gallic War'",
  "tagline": "код для нахождения всех вхождений с предлогом в сочинении",
  "body": "Код был написан для текста \"Записок о Галльской войне\", представленном на сайте thelatinlibrary.com. На текстах другого формата программа не будет работать. Язык программирования - Python 3.3.\r\nТекст каждой книги был скопирован, сохранен в формате txt и помещен в одну папку с программой.\r\nПрограмма работает для одной книги произведения. То есть, чтобы запустить ее для отдельной книги, необходимо видоизменить код, а именно название файла, который открывает программа (т.е. изменить номер книги).\r\nПрограмма не идеальна, и, к сожалению, не находит вхождения с предлогом с большой буквы, т.е. вхождения в начале предложения (их нужно искать вручную). \r\nНа экран сначала массивом выводится схематичное распределение вхождений по книгам. Символ [ ] обозначает одну пронумерованную группу предложений (в виде таких секций представлен текст \"Записок...\" на веб-сайте. Чаще это два-три предложения). Группа секций - это абзац, абзацы в схеме также пронумерованы. Далее массивом выводятся сначала все вхождения с предлогом. До и после массива представлено число - количество всех вхождений с предлогом.\r\nАвтоматически к каждому вхождению приписывается адресация: номер книги, номер абзаца, номер секции. Каждый раз призапуске программы для новой книги нужно изменять название файла, для которого работает программа, а также номер книги, который будет приписываться каждому вхождению.\r\n\r\nВ конце работы программа создает csv-файл с результатами (а именно списком вхождений). \r\n\r\nКод программы простой, т.е. не предназначен для сложной автоматической обработки полученных результатов, а также не прездназначен для текстов разного формата, так как программа была написана в рамках узкого исследования, где способ выявления всех вхождений с предлогом в сочинении Цезаря \"Записки о Галльской войне\" не имеет большого значения.\r\n\r\n\r\n\r\n\r\n\r\n    import re\r\n    f=open('книга I.txt', 'r', encoding='utf-8')    #Открытие файла. Изменить название файла призапуске кода для другой книги\r\n    fw=open('книга I.csv', 'w', encoding='utf-8')   #Создание csv-файла. Изменить название файла призапуске кода для другой книги\r\n    s=f.read()  \r\n    e=re.split('\\[[0-9]*\\]', s) #разделение файла на пронумерованные секции (2-3 предложения) согласно формату текста\r\n    p=1\r\n    n=0\r\n    v=[]\r\n    u=1\r\n    pp=[]\r\n    for y in e:\r\n        ll=0\r\n        if y==e[0]:\r\n            continue\r\n        else:\r\n            print(p)\r\n            z=re.split(' [0-9]* ', y)    #разделение секций на предложение\r\n            for i in z:\r\n                pp.append(u)\r\n                u+=1\r\n            for l in z:\r\n                q=re.findall(' (?:A|a)b? [A-Za-z]*', l)\r\n                if l==z[0]:\r\n                    continue\r\n                else:\r\n                    print(q)\r\n                    for t in q:\r\n                        v.append(t+' '+'1'+' ' +str(p)+' '+str(pp[ll])) #приписывание адресации к вхождению. 1-номер книги. \r\n                        n+=1\r\n                ll+=1\r\n            p+=1\r\n    print(n)\r\n    print(v)\r\n    print(len(v))\r\n    for b in v:\r\n            o=re.search('ab [jyaeiuohAEIUOHYJ]', b)   #поиск вхождений алломорфа 'а' с лексемами на гласный или придыхательный [h]\r\n            if o:\r\n                fw.write(b + ';'+'ab v' + '\\n')          #запись данных в csv-файл\r\n            y=re.search('ab [bcdfgklmnpqrstvwxzBCDFGKLMNPQRSTVWXZ]', b)        #поиск вхождений алломорфа с лексемами на согласный \r\n            if y:\r\n                fw.write(b + ';'+'ab c'+ '\\n')          #запись данных в csv-файл\r\n            rr=re.search('a [jyaeiuohAEIUOHYJ]', b)             #поиск вхождений алломорфа 'ab' с лексемами на гласный и [h]\r\n            if rr:\r\n                fw.write(b + ';'+ 'a v'+ '\\n')          #запись данных в csv-файл\r\n            yy=re.search('a [bcdfgklmnpqrstvwxzBCDFGKLMNPQRSTVWXZ]',b)  #поиск вхождений алломорфа с лексемами на согласный\r\n            if yy:\r\n                fw.write(b + ';'+'a c'+ '\\n')             #запись данных в csv-файл\r\n    f.close()\r\n    fw.close()\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}